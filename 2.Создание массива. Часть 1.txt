Ниже о методах которые будут полезны в решении задач урока:

1. np.array()
Метод np.array(object, dtype=None, copy=True, order='K', subok=False, ndmin=0) создает массив из объекта, такого как список или кортеж.

object: Исходный объект, который может быть списком, кортежем и т.д.
dtype (необязательный): Тип данных элементов массива. Если не указан, тип данных будет определен автоматически.
copy (необязательный): Если True, создает копию массива. По умолчанию True.
order (необязательный): Порядок, в котором будут расположены элементы массива в памяти ('C' - C-порядок, 'F' - порядок Fortran). По умолчанию 'K'.
subok (необязательный): Если True, подклассы будут переданы, если это возможно. По умолчанию False.
ndmin (необязательный): Минимальное количество измерений в массиве. По умолчанию 0.

2. np.zeros()
Метод np.zeros(shape, dtype=float, order='C') создает массив указанной формы и заполняет его нулями.

shape: Форма (размеры) массива, задается в виде кортежа целых чисел.
dtype (необязательный): Тип данных элементов массива. По умолчанию float.
order (необязательный): Порядок, в котором будут расположены элементы массива в памяти ('C' - C-порядок, 'F' - порядок Fortran). По умолчанию 'C'.

3. np.ones()
Метод np.ones(shape, dtype=None, order='C') создает массив указанной формы и заполняет его единицами.

shape: Форма (размеры) массива, задается в виде кортежа целых чисел.
dtype (необязательный): Тип данных элементов массива. Если не указан, будет использован тип данных по умолчанию.
order (необязательный): Порядок, в котором будут расположены элементы массива в памяти ('C' - C-порядок, 'F' - порядок Fortran). По умолчанию 'C'.

4. np.empty()
Метод np.empty(shape, dtype=float, order='C') создает массив указанной формы, но не инициализирует его значения. Значения элементов массива будут зависеть от текущего состояния памяти.

shape: Форма (размеры) массива, задается в виде кортежа целых чисел.
dtype (необязательный): Тип данных элементов массива. По умолчанию float.
order (необязательный): Порядок, в котором будут расположены элементы массива в памяти ('C' - C-порядок, 'F' - порядок Fortran). По умолчанию 'C'.

5. np.arange()
Метод np.arange(start, stop, step, dtype=None) в библиотеке NumPy используется для создания массива с числами из равномерной последовательности.

start (необязательный): Начальное значение последовательности. По умолчанию 0.
stop: Конечное значение последовательности (не включается).
step (необязательный): Шаг между значениями. По умолчанию 1.
dtype (необязательный): Тип данных элементов массива. Если не указан, определяется автоматически.

6. np.linspace()
Метод np.linspace(start, stop, num=50, endpoint=True, retstep=False, dtype=None) в библиотеке NumPy используется для создания массива с равномерно распределенными значениями в заданном интервале.

start: Начальное значение последовательности.
stop: Конечное значение последовательности.
num (необязательный): Количество элементов в массиве. По умолчанию 50.
endpoint (необязательный): Если True, конечное значение stop включается в последовательность. По умолчанию True.
retstep (необязательный): Если True, возвращает шаг между значениями и массив. По умолчанию False.
dtype (необязательный): Тип данных элементов массива. Если не указан, определяется автоматически.

7. np.full()
Метод np.full(shape, fill_value, dtype=None, order='C') в библиотеке NumPy используется для создания массива указанной формы (shape) и заполнения его заданным значением (fill_value).

shape: Форма (размеры) массива, задается в виде кортежа целых чисел. Например, (2, 3) создаст двумерный массив с 2 строками и 3 столбцами.
fill_value: Значение, которым будет заполнен массив.
dtype (необязательный): Тип данных элементов массива. Если не указан, будет использован тип данных fill_value.
order (необязательный): Порядок, в котором будут расположены элементы массива в памяти ('C' - C-порядок, 'F' - порядок Fortran). По умолчанию 'C'.